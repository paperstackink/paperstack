#!/usr/bin/env node

const Dev = require('../dist/Dev.js').default
const Help = require('../dist/Help.js').default
const Build = require('../dist/Build.js').default
const Create = require('../dist/Create.js').default
const Version = require('../dist/Version.js').default
const MakeComponent = require('../dist/MakeComponent.js').default

const firstArgument = process.argv[2]

let name = 'root'

// If calling `paper` or `paper --flag` then we still wanna use `root`
if (firstArgument && !firstArgument.startsWith('-')) {
  name = firstArgument
}

// If calling root then there isn't a command name, thus the arguments start earlier
const arguments = name === 'root'
  ? process.argv.slice(2)
  : process.argv.slice(3)

const mapping = {
  'dev': Dev,
  'help': Help,
  'root': Help,
  'build': Build,
  'create': Create,
  'make:component': MakeComponent,
}

const command = mapping[name]

if (!command) {
  throw new Error(`'${name}' is an unknown command. Try running 'paper --help' to see all available commands.`)
}

const instance = new command()

if (arguments.some(argument => ['--version', '-v', '-V'].includes(argument))) {
  new Version().handle()
} else if (arguments.some(argument => ['--help', '-h', '-H'].includes(argument))) {
  instance.help()
} else {
  instance
    .handle({ options: arguments })
}
